[user]
	email = aoeu@users.noreply.github.com
	name = Travis snɯǝᗡɔW

[core]
	editor = A

[alias]
	edits = diff --name-only --diff-filter=ACM
	stage = add
	staged = diff --cached --name-only --diff-filter=ACM
	unstaged = diff --name-only --diff-filter=ACM
	unstage = reset HEAD
	audition = add -p
	preview = diff
	review = diff --cached
	mash = merge --squash
	squish = commit --amend --no-edit
	shove = push --force
	nudge = push --force-with-lease # h/t @ rtharrington: https://twitter.com/rtharrington/status/967640453851033600
	sync = checkout
	wat = status
	nope = reset --hard HEAD
	rollback = reset --hard HEAD^1
	stat = diff --cached --stat
	diverge = checkout -b
	branchname = rev-parse --abbrev-ref HEAD
	branches = !git for-each-ref --format='%(refname:short)' refs/heads/
	trail = !git reflog | egrep -io 'moving from ([^[:space:]]+)' | cut -d' ' -f3 | head -10
	recent = !git reflog | egrep -io 'moving from ([^[:space:]]+)' | cut -d' ' -f3 | awk '!x[$0]++' |  head -10
	recommit = "!f() { test -z $1 && echo 'usage: git recommit [SHA]' >&2 || git cherry-pick $1 && git rebase --ignore-date HEAD^1; }; f"
	follow = "!f() { git branch --set-upstream-to $1/$(git branchname) $(git branchname); }; f"
	publish = "!f() { git push $1 $(git branchname); }; f"
	preserve = "stash push --message"
	restore = "!f() {  git stash apply stash^{/$*};  }; f"
	sha = "rev-parse --verify HEAD"
	delete = "!f() { s=$(git branchname); ( git checkout develop || git checkout master ) && git branch -D "$s"; }; f"

[url "git@github.com:"]
	insteadOf = https://github.com/

[mergetool]
	keepBackup = false
